name: Continuous Integration and Deployment  # Nome do workflow

on:
  push:
    branches:
      - main  # Aciona o workflow quando há um push para a branch main
  pull_request:  # Aciona o workflow para pull requests

jobs:
  build:
    runs-on: ubuntu-latest  # Ambiente de execução do job (Ubuntu mais recente)

    steps:
      - name: Checkout code  # Nome da etapa
        uses: actions/checkout@v3  # Ação para clonar o repositório

      - name: Set up JDK 21  # Nome da etapa
        uses: actions/setup-java@v3  # Ação para configurar o JDK
        with:
          distribution: 'temurin'  # Distribuição do JDK
          java-version: '21'  # Versão do JDK

      - name: Cache Maven packages  # Nome da etapa
        uses: actions/cache@v2  # Ação para cache de dependências Maven
        with:
          path: ~/.m2/repository  # Caminho para o cache Maven
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}  # Chave para o cache
          restore-keys: |
            ${{ runner.os }}-maven  # Chaves alternativas para restaurar o cache

      - name: Build with Maven  # Nome da etapa
        run: mvn clean install  # Comando para compilar o código com Maven

      - name: Run unit tests  # Nome da etapa
        run: mvn test  # Comando para executar os testes unitários

      - name: Run integration tests  # Nome da etapa
        run: mvn verify  # Comando para executar os testes de integração

      - name: Build Docker image  # Nome da etapa
        run: docker build -t techshop:latest .  # Comando para construir a imagem Docker

      - name: Save Docker image  # Nome da etapa
        run: docker save -o techshop.tar techshop:latest  # Comando para salvar a imagem Docker como um arquivo tar

      - name: Upload Docker image  # Nome da etapa
        uses: actions/upload-artifact@v2  # Ação para fazer o upload de artefatos
        with:
          name: techshop-image  # Nome do artefato
          path: techshop.tar  # Caminho para o arquivo tar da imagem Docker

  deploy:
    runs-on: ubuntu-latest  # Ambiente de execução do job (Ubuntu mais recente)
    needs: build  # Este job depende do job de build
    steps:
      - name: Checkout code  # Nome da etapa
        uses: actions/checkout@v3  # Ação para clonar o repositório

      - name: Download Docker image  # Nome da etapa
        uses: actions/download-artifact@v2  # Ação para baixar o artefato
        with:
          name: techshop-image  # Nome do artefato a ser baixado
          path: .  # Caminho onde o artefato será salvo

      - name: Ensure downloaded file is correct  # Nome da etapa
        run: | # Verifica se o arquivo existe e é um arquivo regular
          echo "Listing contents of the current directory:"
          ls -alh 
          echo "Verifying the downloaded file:"
          file techshop.tar
          echo "Checking if it is a regular file:"
          if [ -f techshop.tar ]; then echo "File exists and is a regular file"; else 
          echo "File does not exist ou is not a regular file"; exit 1; fi

      - name: Load Docker image  # Nome da etapa
        run: docker load -i techshop.tar  # Comando para carregar a imagem Docker do arquivo tar

      - name: Set up Ansible  # Nome da etapa
        run: | # Atualiza a lista de pacotes e Instala o Ansible
          sudo apt-get update  
          sudo apt-get install -y ansible

      - name: Configure Ansible inventory  # Nome da etapa
        # Cria o diretório para o inventário do Ansible,
        # Cria o arquivo de inventário do Ansible
        # Adiciona o host local ao inventário
        run: | 
          mkdir -p ansible  
          echo '[local]' > ansible/inventory.ini
          echo 'localhost ansible_connection=local' >> ansible/inventory.ini

      - name: Run Ansible Playbook  # Nome da etapa
        # Comando para executar o playbook do Ansible
        run: |
          ansible-playbook -i ansible/inventory.ini ansible/playbooks/deploy_techshop.yml  
